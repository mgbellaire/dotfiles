#//////|||\\\\\\#
#|| Oh-My-Zsh ||#
#\\\\\\|||//////#
# Welcome message.
echo 'Allons-y!'
source $HOME/.zshrc-local
export PATH="/opt/homebrew/bin:$PATH"
# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
export ZSH_CUSTOM=$HOME/.zsh_custom
# ZSH Theme.
ZSH_THEME='sunrise'
# Add plugins here. (Add wisely, as too many plugins slow down shell startup.)
plugins=(git brew tmux history)
# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS='mm/dd/yyyy'
# Source the oh-my-zsh repository for ZSH.
source $ZSH/oh-my-zsh.sh

#/////|||\\\\\#
#|| Aliases ||#
#\\\\\|||/////#

#############
# Oh-My-Zsh #
#############
alias sozsh='clear;source ~/.zshrc'

######
# PS #
######
alias pss='ps -ax | grep -i'

########
# Tail #
########
alias logs='multitail -D --mergeall /var/log/apache2/access_log /var/log/apache2/error_log'
alias taildd='clear;touch /tmp/drupal_debug.txt;tail -f /tmp/drupal_debug.txt'
alias dcs="phpcs --standard=Drupal,DrupalPractice --extensions='php,module,inc,install,test,profile,theme,js,css,info,txt' --ignore='*.features.*.inc*.min.css'"

#######
# Vim #
#######
alias vi='vim'

########
# Grep #
########
alias grr='grep -Rn'

########
# Brew #
########
alias b='brew'
alias bo='brew outdated'
alias bup='brew update'
alias bug='brew upgrade'
export HOMEBREW_NO_AUTO_UPDATE=1

###########
# Vagrant #
###########
alias v='vagrant'

######
# CD #
######
alias ..2='../..'
alias ..3='../../..'
alias ..4='../../../..'
alias ..5='../../../../..'
alias ..6='../../../../../..'

###########
# Youtube #
###########
alias ydl='youtube-dl'

unset LSCOLORS
export CLICOLOR=1
export CLICOLOR_FORCE=1

########
# Tmux #
########
alias tps='sh ~/dotfiles/bin/tmux-sessions.sh'

########
# Find #
########
alias findf='find . -name'

#////||\\\\#
#|| Path ||#
#\\\\||////#

############
# Binaries #
############
export PATH='/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin'
export PATH="/usr/local/bin:$HOME/bin:$PATH"
export PATH="$PATH:$HOME/dotfiles/bin"
export PATH="/opt/homebrew/bin:$PATH"
export PATH="/opt/homebrew/opt:$PATH"

#######
# PHP #
#######
export PATH="/usr/local/opt/php@8.0/bin:$PATH"
export PATH="/usr/local/opt/php@8.0/sbin:$PATH"

############
# Composer #
############
export PATH="$HOME/.composer/vendor/bin:$PATH" # Add composer's bin directory to PATH.

########
# Node #
########
export PATH="/usr/local/node_modules/.bin:$PATH" # Add npm's bin directory to PATH.

#######
# NVM #
#######
#export NVM_DIR="$HOME/.nvm"
#[ -s "/usr/local/opt/nvm/nvm.sh" ] && \. "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
#[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
# Automatically load using `nvm use` when a .nvmrc file is present.
#autoload -U add-zsh-hook
#load-nvmrc() {
#  local node_version="$(nvm version)"
#  local nvmrc_path="$(nvm_find_nvmrc)"
#
#  if [ -n "$nvmrc_path" ]; then
#    local nvmrc_node_version=$(nvm version "$(/bin/cat "${nvmrc_path}")")
#
#    if [ "$nvmrc_node_version" = "N/A" ]; then
#      nvm install
#    elif [ "$nvmrc_node_version" != "$node_version" ]; then
#      nvm use
#    fi
#  elif [ "$node_version" != "$(nvm version default)" ]; then
#    echo "Reverting to nvm default version"
#    nvm use default
#  fi
#}
#add-zsh-hook chpwd load-nvmrc
#load-nvmrc
